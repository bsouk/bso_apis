<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Reset Password</title>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
	<link rel="stylesheet"
		href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.7.2/font/bootstrap-icons.min.css">
	<link rel="stylesheet" href="/path/to/your/styles.css">
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
	<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
	<style>
		body {
			display: flex;
			align-items: center;
			justify-content: center;
			height: 100vh;
			margin: 0;
			background-color: #f8f9fa;
		}

		.loginWrapPage {
			display: flex;
			align-items: center;
			justify-content: center;
			flex-direction: column;
			width: 100%;
			max-width: 900px;
			margin: auto;
		}

		.signPatternWrap img {
			width: 100%;
			height: auto;
			object-fit: cover;
		}

		.loginCardWrap {
			width: 100%;
			display: flex;
			flex-direction: column;
			align-items: center;
		}

		.signInLogo img {
			margin-bottom: 1rem;
			width: 100px;
			height: 100px;
		}

		.signinCard {
			background: #fff;
			padding: 2rem;
			border-radius: 0.5rem;
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
			width: 100%;
			max-width: 500px;
		}

		.signinCard .card-title {
			margin-bottom: 1rem;
			font-size: 1.5rem;
		}

		.signinCard .form-group {
			margin-bottom: 1rem;
		}

		.inpIcon {
			position: absolute;
			top: 50%;
			right: 10px;
			transform: translateY(-50%);
			cursor: pointer;
		}

		.themeBtn {
			background-color: #007bff;
			border-color: #007bff;
			color: #fff;
		}

		.themeBtn:hover {
			background-color: #0056b3;
			border-color: #0056b3;
		}
	</style>
</head>

<body>
	<div class="loginWrapPage">

		<div class="loginCardWrap">
			<div class="signInLogo">
				<img src="https://betazone.promaticstechnologies.com/heii_rest_apis/public/logo/logo.svg"
					alt="Hei Logo" />
			</div>
			<div class="card signinCard">
				<div class="card-body">
					<h2 class="card-title">Reset Password!</h2>
					<p class="mb-4">Enter your new password.</p>
					<div class="signform">
						<form id="resetPasswordForm">
							<div class="form-group">
								<label for="newPassword">New Password</label>
								<div class="position-relative">
									<input id="newPassword" name="newPassword" type="password"
										placeholder="New Password" class="form-control" />
									<!-- <small class="text-danger" id="newPasswordError"></small> -->

									<span id="toggleNewPasswordVisibility" class="inpIcon">
										<i class="bi bi-eye-slash"></i>
									</span>
								</div>
								<small class="text-danger" id="newPasswordError"></small>
							</div>
							<div class="form-group">
								<label for="confirmPassword">Confirm Password</label>
								<div class="position-relative">
									<input id="confirmPassword" name="confirmPassword" type="password"
										placeholder="Confirm Password" class="form-control" />
									<!-- <small class="text-danger" id="confirmPasswordError"></small> -->
									<span id="toggleConfirmPasswordVisibility" class="inpIcon ">
										<i class="bi bi-eye-slash"></i>
									</span>
								</div>
								<!-- <small class="text-danger" id="confirmPasswordError"></small> -->

							</div>
							<small class="text-danger" id="confirmPasswordError"></small>

							<button type="button" class="btn themeBtn w-100 mt-3" id="submitBtn">
								Submit
							</button>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script>


		let password = ""
		let inputField = ""
		let token = ""
		// let inputFieldconfirm=""
		function getQueryParam(param) {
			const urlParams = new URLSearchParams(window.location.search);
			return urlParams.get(param);
		}
		$(document).ready(function () {
			token = getQueryParam('token');
			console.log('ID from URL:', token);
			$('#newPassword').on('input', function () {
				inputField = document.getElementById("newPassword");
				console.log('Confirm Password changed', inputField.value);
				if (inputField?.value?.length < 8) {
					document.getElementById("newPasswordError").innerText = "Password should at least 8 characters"
					return
				} else {
					document.getElementById("newPasswordError").innerText = "";

				}
			});

			$('#confirmPassword').on('input', function () {
				let inputFieldconfirm = $("#confirmPassword").val();

				if (inputFieldconfirm === inputField.value) {
					$("#confirmPasswordError").text("")

				} else {
					$("#confirmPasswordError").text("Password does not match")
					return

				}
			});

			$("#submitBtn").click(async () => {

				let isValid = true;
				let newPassword = $("#newPassword").val()
				let confirmPassword = $("#confirmPassword").val()

				console.log(newPassword.length)


				if (newPassword.length < 6) {
					console.log("hii")
					document.getElementById("newPasswordError").innerText = "Password should at least 8 characters"


					isValid = false;

				}
				console.log(confirmPassword?.length)



				let inputFieldconfirm = $("#confirmPassword").val();

				if (inputFieldconfirm === inputField.value) {
					$("#confirmPasswordError").text("")

				} else {
					$("#confirmPasswordError").text("Password does not match")
					isValid = false;
				}


				if (isValid) {
					try {
						const response = await axios.post(`https://betazone.promaticstechnologies.com/hei/user/resetPasswordByAdmin`, { password: newPassword, token })

						console.log("response", response)
						if (response.data.code === 200) {
							window.location.href = "https://betazone.promaticstechnologies.com/heii_rest_apis/views/success.ejs"
						}
					} catch (error) {
						console.log(error)
						Swal.fire('Error', error?.response?.data?.errors?.msg, 'error');
					}
				}

			})
		});



		document.addEventListener('DOMContentLoaded', (event) => {
			const togglePasswordVisibility = (inputId, toggleIconId) => {
				const input = document.getElementById(inputId);
				const icon = document.getElementById(toggleIconId).firstElementChild;
				const isVisible = input.type === "text";
				input.type = isVisible ? "password" : "text";
				icon.className = isVisible ? "bi bi-eye-slash" : "bi bi-eye";
			};

			document.getElementById('toggleNewPasswordVisibility').addEventListener('click', () => {
				togglePasswordVisibility('newPassword', 'toggleNewPasswordVisibility');
			});

			document.getElementById('toggleConfirmPasswordVisibility').addEventListener('click', () => {
				togglePasswordVisibility('confirmPassword', 'toggleConfirmPasswordVisibility');
			});





			// const handleSubmit = async () => {
			//     const newPassword = document.getElementById('newPassword').value;
			//     const confirmPassword = document.getElementById('confirmPassword').value;
			//     const newPasswordError = document.getElementById('newPasswordError');
			//     const confirmPasswordError = document.getElementById('confirmPasswordError');

			//     newPasswordError.innerText = '';
			//     confirmPasswordError.innerText = '';

			//     let isValid = true;

			//     if (newPassword.length < 6) {

			//         newPasswordError.innerText = 'Password must be at least 6 characters long';
			//         isValid = false;

			//     }

			//     if (newPassword !== confirmPassword) {
			//         confirmPasswordError.innerText = 'Passwords must match';
			//         isValid = false;
			//     }

			//     if (isValid) {
			//         try {
			//             const token = 'euyfgeuhfgeu'; 
			//             const response = await axios.post('/resetPassword', {
			//                 password: newPassword,
			//                 token: token,
			//             });

			//             if (response.data) {
			//                 Swal.fire('Password reset successfully', '', 'success');
			//                 window.location.href = '/ui/Signin';
			//             }
			//         } catch (error) {
			//             Swal.fire('Error', 'There was an error resetting your password', 'error');
			//         }
			//     }
			// };
		});
	</script>
</body>

</html>